00004E6F74207072696D652E005072696D652100
202C34002000340168193100884C300031016815990420006821E0003001410134016002200D6821E000884344016015700028002A002000988445A14001601C700039009844E00D41016021210AE00D7000

00 LD A, 0x2B		0010 0000 0010 1011		202B
01 ST A, [0x00]		0011 0100 0000 0000		3400
02 LD A, 0x00		0010 0000 0000 0000		2000
03 ST A, [0x01]		0011 0100 0000 0001		3401
04 JSR 0x019		0110 1000 0001 1001		6819
05 LD B, [0x00]		0011 0001 0000 0000		3100
06 BLT A, B, +0x0C	1000 1000 0100 1100		884C
07 LD A, [0x00]		0011 0000 0000 0000		3000
08 LD B, [0x01]		0011 0001 0000 0001		3101
09 JSR 0x015		0110 1000 0001 0101		6815
0A BNZ A, +0x04		1001 1001 0000 0100		9904
0B LD A, 0x00		0010 0000 0000 0000		2000
0C JSR 0x021		0110 1000 0010 0001		6821
0D INT 0x00			1110 0000 0000 0000		E000
0E LD A, [0x01]		0011 0000 0000 0001		3001
0F ADD A, A, 0x1	0100 0001 0000 0001		4101
10 ST A, [0x01]		0011 0100 0000 0001		3401
11 JMP 0x002		0110 0000 0000 0010		6002
12 LD A, 0x0D		0010 0000 0000 1101		200D
13 JSR 0x021		0110 1000 0010 0001		6821
14 INT 0x00			1110 0000 0000 0000		E000
15 BLT A, B, +0x03	1000 1000 0100 0011		8843
16 SUB A, A, B		0100 0100 0000 0001		4401
17 JMP 0x015		0110 0000 0001 0101		6015
18 RET				0111 0000 0000 0000		7000
19 LD B, A			0010 1001 0000 0000		2800
1A LD C, A			0010 1010 0000 0000		2A00
1B LD A, 0x00		0010 0000 0000 0000		2000
1C BZ C, +0x04		1001 1000 1000 0100		9884
1D SUB C, C, 0x1	0100 0101 1010 0001		45A1
1E ADD A, A, B		0100 0000 0000 0001		4001
1F JMP 0x01C		0110 0000 0001 1100		601C
20 RET				0111 0000 0000 0000		7000
21 LD B, [A]		0011 1001 0000 0000		3900
22 BZ B, +0x04		1001 1000 0100 0100		9844
23 INT 0x0D			1110 0000 0000 1101		E00D
24 ADD A, A, 0x1	0100 0001 0000 0001		4101
25 JMP 0x021		0110 0000 0010 0001		6021
26 LD B, 0x0A		0010 0001 0000 1010		210A
27 INT 0x0D			1110 0000 0000 1101		E00D
28 RET				0111 0000 0000 0000		7000

00 LD A, 0x2B
01 ST A, [0x00]
02 loop: LD A, 0x00
03 ST A, [0x01]
04 JSR func_square
05 LD B, [0x00]
06 BLT A, B, break
07 LD A, [0x00]
08 LD B, [0x01]
09 JSR func_mod
0A BNZ A, loop_end
0B LD A, 0x00
0C JSR func_println
0D INT 0x00
0E loop_end: LD A, [0x01]
0F ADD A, A, 0x1
10 ST A, [0x01]
11 JMP loop
12 break: LD A, 0x0D
13 JSR func_println
14 INT 0x00
15 func_mod: BLT A, B, func_mod_end
16 SUB A, A, B
17 JMP func_mod
18 func_mod_end: RET
19 func_square: LD B, A
1A LD C, A
1B LD A, 0x00
1C func_square_loop: BZ C, func_square_end
1D SUB C, C, 0x1
1E ADD A, A, B
1F JMP func_square_loop
20 func_square_end: RET
21 func_println: LD B, [A]
22 BZ B, func_println_fin
23 INT 0x0D
24 ADD A, A, 1
25 JMP func_println
26 func_println_fin: LD B, 0x0A
27 INT 0x0D
28 RET










